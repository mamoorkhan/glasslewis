<Project>
  <PropertyGroup>
    <!-- Common properties -->
    <TargetFramework>net8.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    
    <!-- Assembly metadata -->
    <Company>Glass Lewis</Company>
    <Product>Glass Lewis Code Challenge</Product>
    <Copyright>Copyright Â© Glass Lewis $(CurrentYear)</Copyright>
    <Version>1.0.0</Version>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <FileVersion>1.0.0.0</FileVersion>
    
    <!-- Build optimization -->
    <Deterministic>true</Deterministic>
    <AccelerateBuildsInVisualStudio>true</AccelerateBuildsInVisualStudio>
    
    <!-- Static analysis -->
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>latest-recommended</AnalysisLevel>
    <RunAnalyzersDuringBuild>true</RunAnalyzersDuringBuild>
  </PropertyGroup>

  <!-- Conditional properties for API project -->
  <PropertyGroup Condition="'$(MSBuildProjectName)' == 'GlassLewis.Api'">
    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
    <PublishReadyToRun>true</PublishReadyToRun>
    <UserSecretsId>aspnet-GlassLewis.Api-52b8cc6b-4ec6-435c-beb9-a4bf38ddba2c</UserSecretsId>
  </PropertyGroup>

  <!-- Conditional properties for test projects -->
  <PropertyGroup Condition="$(MSBuildProjectName.EndsWith('.UnitTests')) or $(MSBuildProjectName.EndsWith('.IntegrationTests')) or $(MSBuildProjectName.EndsWith('.SystemTests')) or $(MSBuildProjectName.Contains('.UiTests.'))">
    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Common using statements for test projects -->
  <ItemGroup Condition="$(MSBuildProjectName.Contains('Tests'))">
    <Using Include="Xunit" />
  </ItemGroup>
</Project>