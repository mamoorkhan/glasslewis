# main.yml - Main CI workflow that builds and creates artifacts
name: Main CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.
  pull_request:
    branches:
      - main
  release:
    types: [published]  # Trigger on GitHub releases

jobs:
  build-and-test:
    uses: ./.github/workflows/build-and-test.yml
    secrets: inherit

  # Deploy to dev automatically on tag/release creation or manual dispatch (but not PRs)
  deploy-dev:
    needs: [build-and-test]
    # Only deploy for official releases (tags like v1.0.0 or GitHub releases) or manual dispatch and exclude PRs
    if: |
      (startsWith(github.ref, 'refs/tags/') || github.event_name == 'release' || github.event_name == 'workflow_dispatch') && github.event_name != 'pull_request'
    uses: ./.github/workflows/deploy-to-environment.yml
    with:
      environment: dev
      artifact_name: ${{ needs.build-and-test.outputs.artifact_name }}
      artifact_version: ${{ needs.build-and-test.outputs.artifact_version }}
    secrets: inherit

  # Deploy to QA after successful dev deployment
  deploy-qa:
    needs: [deploy-dev]
    # Only deploy for official releases or manual dispatch AND if dev deployment succeeded and exclude PRs
    if: |
      (startsWith(github.ref, 'refs/tags/') || github.event_name == 'release' || github.event_name == 'workflow_dispatch') && needs.deploy-dev.result == 'success' && github.event_name != 'pull_request'
    uses: ./.github/workflows/deploy-to-environment.yml
    with:
      environment: qa
      artifact_name: ${{ needs.build-and-test.outputs.artifact_name }}
      artifact_version: ${{ needs.build-and-test.outputs.artifact_version }}
    secrets: inherit

  # Deploy to staging after successful QA deployment
  deploy-staging:
    needs: [deploy-qa]
    # Only deploy for official releases or manual dispatch AND if QA deployment succeeded and exclude PRs
    if: |
      (startsWith(github.ref, 'refs/tags/') || github.event_name == 'release' || github.event_name == 'workflow_dispatch') && needs.deploy-qa.result == 'success' && github.event_name != 'pull_request'
    uses: ./.github/workflows/deploy-to-environment.yml
    with:
      environment: staging
      artifact_name: ${{ needs.build-and-test.outputs.artifact_name }}
      artifact_version: ${{ needs.build-and-test.outputs.artifact_version }}
    secrets: inherit

  # Deploy to preprod after successful staging deployment
  deploy-preprod:
    needs: [deploy-staging]
    # Only deploy for official releases or manual dispatch AND if staging deployment succeeded and exclude PRs
    if: |
      (startsWith(github.ref, 'refs/tags/') || github.event_name == 'release' || github.event_name == 'workflow_dispatch') && needs.deploy-staging.result == 'success' && github.event_name != 'pull_request'
    uses: ./.github/workflows/deploy-to-environment.yml
    with:
      environment: preprod
      artifact_name: ${{ needs.build-and-test.outputs.artifact_name }}
      artifact_version: ${{ needs.build-and-test.outputs.artifact_version }}
    secrets: inherit

  # Deploy to production after successful preprod deployment (requires manual approval)
  deploy-prod:
    needs: [deploy-preprod]
    # Only deploy for official releases or manual dispatch AND if preprod deployment succeeded and exclude PRs
    if: |
      (startsWith(github.ref, 'refs/tags/') || github.event_name == 'release' || github.event_name == 'workflow_dispatch') && needs.deploy-preprod.result == 'success' && github.event_name != 'pull_request'
    uses: ./.github/workflows/deploy-to-environment.yml
    with:
      environment: prod
      artifact_name: ${{ needs.build-and-test.outputs.artifact_name }}
      artifact_version: ${{ needs.build-and-test.outputs.artifact_version }}
    secrets: inherit