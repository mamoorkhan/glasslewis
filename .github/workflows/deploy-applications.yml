# reusable/deploy-applications.yml - Deploys applications to Azure
name: Deploy Applications

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      artifact_name:
        required: true
        type: string
      artifact_version:
        required: true
        type: string

jobs:
  deploy-apps:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Angular Artifacts
        uses: actions/download-artifact@v4
        with:
          name: angular-build
          path: ./angular-dist
      
      - name: Download .NET API Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dotnet-api
          path: ./api-publish
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy .NET API
        run: |
          cd ./api-publish
          zip -r ../api-deployment.zip .
          cd ..
          
          az webapp deployment source config-zip \
            --resource-group rg-glasslewis-${{ inputs.environment }} \
            --name app-glasslewis-api-${{ inputs.environment }} \
            --src api-deployment.zip
      
      - name: Get Static Web App Deployment Token
        run: |
          STATIC_WEB_APP_NAME="swa-glasslewis-client-${{ inputs.environment }}"
          RESOURCE_GROUP="rg-glasslewis-${{ inputs.environment }}"
          
          DEPLOYMENT_TOKEN=$(az staticwebapp secrets list \
            --name $STATIC_WEB_APP_NAME \
            --resource-group $RESOURCE_GROUP \
            --query "properties.apiKey" \
            --output tsv)
          
          echo "DEPLOYMENT_TOKEN=$DEPLOYMENT_TOKEN" >> $GITHUB_ENV


      - name: Deploy to Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "./angular-dist"
          output_location: "."
          skip_app_build: true

      - name: Verify deployments
        run: |
          API_URL="https://${{ inputs.environment }}.api.glasslewis.mamoorkhan.com"
          CLIENT_URL="https://${{ inputs.environment }}.client.glasslewis.mamoorkhan.com"
          
          echo "API URL: ${API_URL}"
          echo "Client URL: ${CLIENT_URL}"
          
          # Wait for apps to start
          sleep 30
          
          # Basic health check
          curl -f "${API_URL}/health" || echo "API health check failed"
          curl -f "${CLIENT_URL}" || echo "Client health check failed"
